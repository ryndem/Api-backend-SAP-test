name: CI/CD

on:
  push:
    branches:
      - qa
  workflow_dispatch:
  
permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: windows-latest
    environment: Production

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'
          include-prerelease: true

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
#      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
          path: /home/runner/work/venta-digital-dummies/venta-digital-dummies/deploy 

      - name: Instalando dependencias
        run: |
          sudo apt-get update
          sudo apt-get install -y wget net-tools
          sudo apt-get install ppp
          sudo apt-get install expect
          sudo apt-get install lftp      
      
      - name: Descargando VPN
        run: |
           wget 'https://drive.usercontent.google.com/download?id=1cE7YVe64lENcVmY063jAgPTTdNRuLMW_&export=download' -O forticlient.tar.gz
           tar -xzvf forticlient.tar.gz
    
      - name: Ejecutando contrato
        run: |
          sudo ./forticlientsslvpn/64bit/helper/setup.linux.sh
    
      - name: Creando Script de Conexi√≥n
        run: |
            cat << EOF > /tmp/expect
            #!/usr/bin/expect -f
            match_max 1000000
            set timeout -1
            spawn ./forticlientsslvpn/64bit/forticlientsslvpn_cli --server ${{ secrets.VPN_HOST }}:${{ secrets.VPN_PORT }} --vpnuser ${{ secrets.VPN_USER }} --keepalive
            expect "Password for VPN:"
            send -- "${{ secrets.VPN_PASSWORD }}"
            send -- "\r"
            expect "Would you like to connect to this server? (Y/N)"
            send -- "Y"
            send -- "\r"
            expect "Clean up..."
            close
            EOF
            chmod 500 /tmp/expect
        env:
            VPN_HOST: ${{ secrets.VPN_HOST }}
            VPN_PORT: ${{ secrets.VPN_PORT }}
            VPN_USER: ${{ secrets.VPN_USER }}
            VPN_PASSWORD: ${{ secrets.VPN_PASSWORD }}
    
      - name: Inicializando la vpn
        run: nohup /usr/bin/expect -f /tmp/expect &
    
      - name: Subiendo Archivos al Servidor Remoto
        run: |
          lftp -c "set net:timeout 5; set net:max-retries 2; set net:reconnect-interval-base 5; open -u backend,backend 172.24.32.38; set ssl:verify-certificate no; mirror deploy / -Renvp --parallel=10"
