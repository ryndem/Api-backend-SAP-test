
name: Pruebas SAP

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: 
      - qa
      - uat
      - main
    types: 
      - closed

env:
      WORKING_DIRECTORY: VentaDigitalPQF
      IIS_SITE_NAME: "VentaDigitalDevops"
      IIS_POOL_NAME: "AppCoreDevops"
      IS_SITE_PATH: "C:\\Sitios\\VentaDigitalDevops"

jobs:

  build:
    runs-on: self-hosted-qa  

    steps:
    - name: Checkout
      uses: actions/checkout@v4

   
    - name: Restore
      run: dotnet restore "${{ env.WORKING_DIRECTORY }}"
    - name: Build
      run: dotnet build "VentaDigitalPQF" --configuration Release --output ./myapp
    - name: dotnet publish
      run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration Release --output ./myapp

  deploy:
    needs: build
    runs-on: self-hosted-qa
    steps:
     - name: Stop  IIS Site
       run: |
             Import-Module WebAdministration
             Stop-Website -Name $env:IIS_SITE_NAME
              $appPoolName = $env:IIS_POOL_NAME
              # Detener el Pool de Aplicaciones
              Stop-WebAppPool -Name $appPoolName
       shell: powershell

     - name: Copy Files
       run: |
         $source = "$env:GITHUB_WORKSPACE/myapp"
         $destination = $env:IS_SITE_PATH
         Get-ChildItem -Path $source -Recurse | ForEach-Object {
         try {
         # Intentar copiar solo si el archivo no est√° bloqueado
         $file = [System.IO.File]::Open($_.FullName, 'Open', 'Read', 'None')
         $file.Close()
         Copy-Item -Path $_.FullName -Destination $destination -Force
          }
         catch {
         Write-Host "Archivo en uso, omitiendo: $($_.FullName)"
              }
         }
       shell: powershell
     - name: Start POOL Site
       run: Start-WebAppPool -Name $env:IIS_POOL_NAME
       shell: powershell 
     - name: Start IIS Site
       run: Start-Website -Name $env:IIS_SITE_NAME
       shell: powershell

